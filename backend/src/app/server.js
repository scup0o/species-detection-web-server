const app = require('./app'); // Gi·∫£ s·ª≠ app.js n·∫±m c√πng c·∫•p ho·∫∑c ƒë∆∞·ªùng d·∫´n ƒë√∫ng
const config = require('../config/index'); // ƒê∆∞·ªùng d·∫´n ƒë·∫øn file config c·ªßa b·∫°n

async function startLocalServer() {
    try {
        const PORT = config.app.port || process.env.PORT || 3000; // ∆Øu ti√™n config, r·ªìi PORT t·ª´ env, r·ªìi 3000
        const HOSTNAME = config.app.hostname || 'localhost'; // M·∫∑c ƒë·ªãnh l√† localhost n·∫øu kh√¥ng c√≥ trong config

        app.listen(PORT, HOSTNAME, () => {
            console.log(`üöÄ Local server is running at http://${HOSTNAME}:${PORT}/`);
            console.log(`üîó API V1 (local): http://${HOSTNAME}:${PORT}/api/v1`); // V√≠ d·ª•
        });
    } catch (error) {
        console.error("‚ùå Failed to start local server:", error);
        process.exit(1); // Tho√°t n·∫øu kh√¥ng kh·ªüi ƒë·ªông ƒë∆∞·ª£c server local
    }
}

// Ki·ªÉm tra xem c√≥ ƒëang ch·∫°y tr√™n Vercel hay m·ªôt m√¥i tr∆∞·ªùng serverless t∆∞∆°ng t·ª± kh√¥ng
// Vercel th∆∞·ªùng set bi·∫øn m√¥i tr∆∞·ªùng VERCEL=1 ho·∫∑c NOW_REGION
// Ho·∫∑c b·∫°n c√≥ th·ªÉ ki·ªÉm tra m·ªôt bi·∫øn m√¥i tr∆∞·ªùng b·∫°n t·ª± ƒë·∫∑t khi deploy
const IS_SERVERLESS = !!(process.env.VERCEL || process.env.NOW_REGION || process.env.LAMBDA_TASK_ROOT);

if (!IS_SERVERLESS) {
    // Ch·ªâ g·ªçi startLocalServer n·∫øu kh√¥ng ph·∫£i m√¥i tr∆∞·ªùng serverless
    startLocalServer();
} else {
    console.log("üåê Running in serverless environment (Vercel, etc.). HTTP server will be managed by the platform.");
}

// QUAN TR·ªåNG: Export instance c·ªßa Express app ƒë·ªÉ Vercel (ho·∫∑c c√°c n·ªÅn t·∫£ng kh√°c) s·ª≠ d·ª•ng
module.exports = app;